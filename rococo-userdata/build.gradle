plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'anbrain.qa.rococo'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url = uri("https://repo.spring.io/milestone") }
    maven { url = uri("https://repo.spring.io/snapshot") }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.grpc:spring-grpc-dependencies:0.4.0'
        mavenBom 'com.google.protobuf:protobuf-bom:3.25.1'
    }
}

dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    // gRPC
    implementation project(':rococo-grpc-common')
    // Spring Boot gRPC интеграция
    implementation "net.devh:grpc-client-spring-boot-starter:${project.ext.springGrpcVersion}"
    implementation "net.devh:grpc-server-spring-boot-starter:${project.ext.springGrpcVersion}"
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    // MySQL
    runtimeOnly "mysql:mysql-connector-java:${project.ext.mysqlDriverVersion}"
    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //Lombok
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    //UnitTests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.h2database:h2:${project.ext.h2Version}"
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
}

jib {
    container {
        ports = ['9090']
        jvmFlags = [
                "-Dspring.profiles.active=${System.env.PROFILE}",
        ]
        environment = [
                'TZ'              : 'Europe/Moscow',
                'GRPC_SERVER_PORT': '9090'
        ]
        creationTime = 'USE_CURRENT_TIMESTAMP'
        labels = [
                'maintainer': 'Artur Akopov @AnBrain',
                'version'   : "${project.version}".toString()
        ]
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "${project.ext.dockerHubName}/rococo-userdata-${System.env.PROFILE}"
        tags = ['latest', "${project.version}"]
    }
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test

tasks.register('printVersion') {
    doLast {
        println project.version
    }
}

tasks.named('test') {
    useJUnitPlatform()
}