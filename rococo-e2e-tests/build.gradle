buildscript {
    ext {
        junitVersion = '5.12.0'
        selenideVersion = '7.9.3'
        slf4jVersion = '2.0.9'
        restAssuredVersion = '5.5.5'
        jacksonVersion = '2.16.1'
        lombokVersion = '1.18.30'
        fakerVersion = '1.0.2'
        kafkaClientsVersion = '3.8.0'
    }
}

plugins {
    id 'java'
}

group = 'anbrain.qa.rococo'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // Logs
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "ch.qos.logback:logback-classic:1.4.11"
    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.platform:junit-platform-launcher:1.10.0"
    // RandomTestData
    testImplementation "com.github.javafaker:javafaker:${fakerVersion}"
    // UI
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    // API
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    // Lombok
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    // Kafka
    testImplementation "org.apache.kafka:kafka-clients:${kafkaClientsVersion}"
    // gRPC
    testImplementation "io.grpc:grpc-protobuf:${project.ext.grpcVersion}"
    testImplementation "io.grpc:grpc-stub:${project.ext.grpcVersion}"
    testImplementation "io.grpc:grpc-netty:${project.ext.grpcVersion}"
    testImplementation "io.grpc:grpc-testing:${project.ext.grpcVersion}"
    testImplementation "com.google.protobuf:protobuf-java:${project.ext.protobufVersion}"
    testImplementation "com.google.protobuf:protobuf-java-util:${project.ext.protobufVersion}"
    testImplementation project(':rococo-grpc-common')

    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
}

test {
    systemProperties System.getProperties()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    useJUnitPlatform()
}