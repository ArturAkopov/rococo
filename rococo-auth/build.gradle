plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.1'
}

group = 'anbrain.qa.rococo'
version = '0.0.1'

dependencies {
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    //web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //Kafka
    implementation "org.springframework.kafka:spring-kafka:${project.ext.springKafkaVersion}"
    //DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation("org.flywaydb:flyway-core")
    implementation("org.flywaydb:flyway-mysql")
    runtimeOnly "mysql:mysql-connector-java:${project.ext.mysqlDriverVersion}"
    //Lombok
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"

    //UnitTests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.h2database:h2:${project.ext.h2Version}"
}

jib {
    container {
        ports = ['9000']
        jvmFlags = ["-Dspring.profiles.active=${System.env.PROFILE}"]
        environment = [
                'TZ'         : 'Europe/Moscow'
        ]
        creationTime = 'USE_CURRENT_TIMESTAMP'
        labels = [
                'maintainer': 'Artur Akopov @AnBrain',
                'version'   : "${project.version}".toString()
        ]
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "${project.ext.dockerHubName}/${project.name}-${System.env.PROFILE}"
        tags = ["${project.version}"]
    }
}

tasks.jib.dependsOn test
tasks.jibDockerBuild.dependsOn test

tasks.register('printVersion') {
    doLast {
        println project.version
    }
}

tasks.named('test') {
    useJUnitPlatform()
}